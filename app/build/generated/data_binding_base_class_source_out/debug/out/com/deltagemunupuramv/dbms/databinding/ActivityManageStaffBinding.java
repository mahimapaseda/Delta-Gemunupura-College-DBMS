// Generated by view binder compiler. Do not edit!
package com.deltagemunupuramv.dbms.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.deltagemunupuramv.dbms.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.chip.Chip;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityManageStaffBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ExtendedFloatingActionButton addStaffButton;

  @NonNull
  public final LinearLayout emptyState;

  @NonNull
  public final TextView emptyStateMessage;

  @NonNull
  public final TextView emptyStateTitle;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView resultsText;

  @NonNull
  public final TextInputEditText searchInput;

  @NonNull
  public final TextInputLayout searchLayout;

  @NonNull
  public final RecyclerView staffRecyclerView;

  @NonNull
  public final AutoCompleteTextView staffTypeFilterDropdown;

  @NonNull
  public final TextInputLayout staffTypeFilterLayout;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final Chip totalCountChip;

  private ActivityManageStaffBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ExtendedFloatingActionButton addStaffButton, @NonNull LinearLayout emptyState,
      @NonNull TextView emptyStateMessage, @NonNull TextView emptyStateTitle,
      @NonNull ProgressBar progressBar, @NonNull TextView resultsText,
      @NonNull TextInputEditText searchInput, @NonNull TextInputLayout searchLayout,
      @NonNull RecyclerView staffRecyclerView,
      @NonNull AutoCompleteTextView staffTypeFilterDropdown,
      @NonNull TextInputLayout staffTypeFilterLayout, @NonNull MaterialToolbar toolbar,
      @NonNull Chip totalCountChip) {
    this.rootView = rootView;
    this.addStaffButton = addStaffButton;
    this.emptyState = emptyState;
    this.emptyStateMessage = emptyStateMessage;
    this.emptyStateTitle = emptyStateTitle;
    this.progressBar = progressBar;
    this.resultsText = resultsText;
    this.searchInput = searchInput;
    this.searchLayout = searchLayout;
    this.staffRecyclerView = staffRecyclerView;
    this.staffTypeFilterDropdown = staffTypeFilterDropdown;
    this.staffTypeFilterLayout = staffTypeFilterLayout;
    this.toolbar = toolbar;
    this.totalCountChip = totalCountChip;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityManageStaffBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityManageStaffBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_manage_staff, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityManageStaffBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addStaffButton;
      ExtendedFloatingActionButton addStaffButton = ViewBindings.findChildViewById(rootView, id);
      if (addStaffButton == null) {
        break missingId;
      }

      id = R.id.emptyState;
      LinearLayout emptyState = ViewBindings.findChildViewById(rootView, id);
      if (emptyState == null) {
        break missingId;
      }

      id = R.id.emptyStateMessage;
      TextView emptyStateMessage = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateMessage == null) {
        break missingId;
      }

      id = R.id.emptyStateTitle;
      TextView emptyStateTitle = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateTitle == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.resultsText;
      TextView resultsText = ViewBindings.findChildViewById(rootView, id);
      if (resultsText == null) {
        break missingId;
      }

      id = R.id.searchInput;
      TextInputEditText searchInput = ViewBindings.findChildViewById(rootView, id);
      if (searchInput == null) {
        break missingId;
      }

      id = R.id.searchLayout;
      TextInputLayout searchLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchLayout == null) {
        break missingId;
      }

      id = R.id.staffRecyclerView;
      RecyclerView staffRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (staffRecyclerView == null) {
        break missingId;
      }

      id = R.id.staffTypeFilterDropdown;
      AutoCompleteTextView staffTypeFilterDropdown = ViewBindings.findChildViewById(rootView, id);
      if (staffTypeFilterDropdown == null) {
        break missingId;
      }

      id = R.id.staffTypeFilterLayout;
      TextInputLayout staffTypeFilterLayout = ViewBindings.findChildViewById(rootView, id);
      if (staffTypeFilterLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.totalCountChip;
      Chip totalCountChip = ViewBindings.findChildViewById(rootView, id);
      if (totalCountChip == null) {
        break missingId;
      }

      return new ActivityManageStaffBinding((CoordinatorLayout) rootView, addStaffButton,
          emptyState, emptyStateMessage, emptyStateTitle, progressBar, resultsText, searchInput,
          searchLayout, staffRecyclerView, staffTypeFilterDropdown, staffTypeFilterLayout, toolbar,
          totalCountChip);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
