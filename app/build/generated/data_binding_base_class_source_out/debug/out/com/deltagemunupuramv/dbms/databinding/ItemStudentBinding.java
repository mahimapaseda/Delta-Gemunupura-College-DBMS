// Generated by view binder compiler. Do not edit!
package com.deltagemunupuramv.dbms.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.deltagemunupuramv.dbms.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemStudentBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageButton deleteButton;

  @NonNull
  public final ImageButton editButton;

  @NonNull
  public final ShapeableImageView studentAvatar;

  @NonNull
  public final TextView studentClass;

  @NonNull
  public final TextView studentId;

  @NonNull
  public final TextView studentName;

  private ItemStudentBinding(@NonNull MaterialCardView rootView, @NonNull ImageButton deleteButton,
      @NonNull ImageButton editButton, @NonNull ShapeableImageView studentAvatar,
      @NonNull TextView studentClass, @NonNull TextView studentId, @NonNull TextView studentName) {
    this.rootView = rootView;
    this.deleteButton = deleteButton;
    this.editButton = editButton;
    this.studentAvatar = studentAvatar;
    this.studentClass = studentClass;
    this.studentId = studentId;
    this.studentName = studentName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemStudentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemStudentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_student, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemStudentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteButton;
      ImageButton deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.editButton;
      ImageButton editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.studentAvatar;
      ShapeableImageView studentAvatar = ViewBindings.findChildViewById(rootView, id);
      if (studentAvatar == null) {
        break missingId;
      }

      id = R.id.studentClass;
      TextView studentClass = ViewBindings.findChildViewById(rootView, id);
      if (studentClass == null) {
        break missingId;
      }

      id = R.id.studentId;
      TextView studentId = ViewBindings.findChildViewById(rootView, id);
      if (studentId == null) {
        break missingId;
      }

      id = R.id.studentName;
      TextView studentName = ViewBindings.findChildViewById(rootView, id);
      if (studentName == null) {
        break missingId;
      }

      return new ItemStudentBinding((MaterialCardView) rootView, deleteButton, editButton,
          studentAvatar, studentClass, studentId, studentName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
