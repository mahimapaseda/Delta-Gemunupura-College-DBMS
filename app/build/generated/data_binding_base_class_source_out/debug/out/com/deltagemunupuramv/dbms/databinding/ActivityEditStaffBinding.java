// Generated by view binder compiler. Do not edit!
package com.deltagemunupuramv.dbms.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.deltagemunupuramv.dbms.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditStaffBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextInputEditText addressInput;

  @NonNull
  public final TextInputLayout addressLayout;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final TextInputEditText appointedSubjectInput;

  @NonNull
  public final TextInputLayout appointedSubjectLayout;

  @NonNull
  public final MaterialButton cameraButton;

  @NonNull
  public final TextInputEditText dobInput;

  @NonNull
  public final TextInputLayout dobLayout;

  @NonNull
  public final TextInputEditText educationalQualificationsInput;

  @NonNull
  public final TextInputLayout educationalQualificationsLayout;

  @NonNull
  public final TextInputEditText emailInput;

  @NonNull
  public final TextInputLayout emailLayout;

  @NonNull
  public final TextInputEditText emergencyContactNameInput;

  @NonNull
  public final TextInputLayout emergencyContactNameLayout;

  @NonNull
  public final TextInputEditText emergencyContactPhoneInput;

  @NonNull
  public final TextInputLayout emergencyContactPhoneLayout;

  @NonNull
  public final TextInputEditText firstAppointmentInput;

  @NonNull
  public final TextInputLayout firstAppointmentLayout;

  @NonNull
  public final TextInputEditText fullNameInput;

  @NonNull
  public final TextInputLayout fullNameLayout;

  @NonNull
  public final MaterialButton galleryButton;

  @NonNull
  public final AutoCompleteTextView genderDropdown;

  @NonNull
  public final TextInputLayout genderLayout;

  @NonNull
  public final TextInputEditText gradesTaughtInput;

  @NonNull
  public final TextInputLayout gradesTaughtLayout;

  @NonNull
  public final AutoCompleteTextView maritalStatusDropdown;

  @NonNull
  public final TextInputLayout maritalStatusLayout;

  @NonNull
  public final TextInputEditText nameWithInitialsInput;

  @NonNull
  public final TextInputLayout nameWithInitialsLayout;

  @NonNull
  public final TextInputEditText nicInput;

  @NonNull
  public final TextInputLayout nicLayout;

  @NonNull
  public final TextInputEditText passwordInput;

  @NonNull
  public final TextInputLayout passwordLayout;

  @NonNull
  public final TextInputEditText phoneInput;

  @NonNull
  public final TextInputLayout phoneLayout;

  @NonNull
  public final TextInputEditText previouslyServedSchoolsInput;

  @NonNull
  public final TextInputLayout previouslyServedSchoolsLayout;

  @NonNull
  public final TextInputEditText professionalQualificationsInput;

  @NonNull
  public final TextInputLayout professionalQualificationsLayout;

  @NonNull
  public final ImageView profileImageView;

  @NonNull
  public final TextInputEditText registrationNumberInput;

  @NonNull
  public final TextInputLayout registrationNumberLayout;

  @NonNull
  public final ExtendedFloatingActionButton saveButton;

  @NonNull
  public final TextInputEditText schoolAppointmentInput;

  @NonNull
  public final TextInputLayout schoolAppointmentLayout;

  @NonNull
  public final TextInputEditText spouseNameInput;

  @NonNull
  public final TextInputLayout spouseNameLayout;

  @NonNull
  public final AutoCompleteTextView staffClassificationDropdown;

  @NonNull
  public final TextInputLayout staffClassificationLayout;

  @NonNull
  public final AutoCompleteTextView statusDropdown;

  @NonNull
  public final TextInputLayout statusLayout;

  @NonNull
  public final TextInputEditText subjectsTaughtInput;

  @NonNull
  public final TextInputLayout subjectsTaughtLayout;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityEditStaffBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextInputEditText addressInput, @NonNull TextInputLayout addressLayout,
      @NonNull AppBarLayout appBarLayout, @NonNull TextInputEditText appointedSubjectInput,
      @NonNull TextInputLayout appointedSubjectLayout, @NonNull MaterialButton cameraButton,
      @NonNull TextInputEditText dobInput, @NonNull TextInputLayout dobLayout,
      @NonNull TextInputEditText educationalQualificationsInput,
      @NonNull TextInputLayout educationalQualificationsLayout,
      @NonNull TextInputEditText emailInput, @NonNull TextInputLayout emailLayout,
      @NonNull TextInputEditText emergencyContactNameInput,
      @NonNull TextInputLayout emergencyContactNameLayout,
      @NonNull TextInputEditText emergencyContactPhoneInput,
      @NonNull TextInputLayout emergencyContactPhoneLayout,
      @NonNull TextInputEditText firstAppointmentInput,
      @NonNull TextInputLayout firstAppointmentLayout, @NonNull TextInputEditText fullNameInput,
      @NonNull TextInputLayout fullNameLayout, @NonNull MaterialButton galleryButton,
      @NonNull AutoCompleteTextView genderDropdown, @NonNull TextInputLayout genderLayout,
      @NonNull TextInputEditText gradesTaughtInput, @NonNull TextInputLayout gradesTaughtLayout,
      @NonNull AutoCompleteTextView maritalStatusDropdown,
      @NonNull TextInputLayout maritalStatusLayout,
      @NonNull TextInputEditText nameWithInitialsInput,
      @NonNull TextInputLayout nameWithInitialsLayout, @NonNull TextInputEditText nicInput,
      @NonNull TextInputLayout nicLayout, @NonNull TextInputEditText passwordInput,
      @NonNull TextInputLayout passwordLayout, @NonNull TextInputEditText phoneInput,
      @NonNull TextInputLayout phoneLayout, @NonNull TextInputEditText previouslyServedSchoolsInput,
      @NonNull TextInputLayout previouslyServedSchoolsLayout,
      @NonNull TextInputEditText professionalQualificationsInput,
      @NonNull TextInputLayout professionalQualificationsLayout,
      @NonNull ImageView profileImageView, @NonNull TextInputEditText registrationNumberInput,
      @NonNull TextInputLayout registrationNumberLayout,
      @NonNull ExtendedFloatingActionButton saveButton,
      @NonNull TextInputEditText schoolAppointmentInput,
      @NonNull TextInputLayout schoolAppointmentLayout, @NonNull TextInputEditText spouseNameInput,
      @NonNull TextInputLayout spouseNameLayout,
      @NonNull AutoCompleteTextView staffClassificationDropdown,
      @NonNull TextInputLayout staffClassificationLayout,
      @NonNull AutoCompleteTextView statusDropdown, @NonNull TextInputLayout statusLayout,
      @NonNull TextInputEditText subjectsTaughtInput, @NonNull TextInputLayout subjectsTaughtLayout,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.addressInput = addressInput;
    this.addressLayout = addressLayout;
    this.appBarLayout = appBarLayout;
    this.appointedSubjectInput = appointedSubjectInput;
    this.appointedSubjectLayout = appointedSubjectLayout;
    this.cameraButton = cameraButton;
    this.dobInput = dobInput;
    this.dobLayout = dobLayout;
    this.educationalQualificationsInput = educationalQualificationsInput;
    this.educationalQualificationsLayout = educationalQualificationsLayout;
    this.emailInput = emailInput;
    this.emailLayout = emailLayout;
    this.emergencyContactNameInput = emergencyContactNameInput;
    this.emergencyContactNameLayout = emergencyContactNameLayout;
    this.emergencyContactPhoneInput = emergencyContactPhoneInput;
    this.emergencyContactPhoneLayout = emergencyContactPhoneLayout;
    this.firstAppointmentInput = firstAppointmentInput;
    this.firstAppointmentLayout = firstAppointmentLayout;
    this.fullNameInput = fullNameInput;
    this.fullNameLayout = fullNameLayout;
    this.galleryButton = galleryButton;
    this.genderDropdown = genderDropdown;
    this.genderLayout = genderLayout;
    this.gradesTaughtInput = gradesTaughtInput;
    this.gradesTaughtLayout = gradesTaughtLayout;
    this.maritalStatusDropdown = maritalStatusDropdown;
    this.maritalStatusLayout = maritalStatusLayout;
    this.nameWithInitialsInput = nameWithInitialsInput;
    this.nameWithInitialsLayout = nameWithInitialsLayout;
    this.nicInput = nicInput;
    this.nicLayout = nicLayout;
    this.passwordInput = passwordInput;
    this.passwordLayout = passwordLayout;
    this.phoneInput = phoneInput;
    this.phoneLayout = phoneLayout;
    this.previouslyServedSchoolsInput = previouslyServedSchoolsInput;
    this.previouslyServedSchoolsLayout = previouslyServedSchoolsLayout;
    this.professionalQualificationsInput = professionalQualificationsInput;
    this.professionalQualificationsLayout = professionalQualificationsLayout;
    this.profileImageView = profileImageView;
    this.registrationNumberInput = registrationNumberInput;
    this.registrationNumberLayout = registrationNumberLayout;
    this.saveButton = saveButton;
    this.schoolAppointmentInput = schoolAppointmentInput;
    this.schoolAppointmentLayout = schoolAppointmentLayout;
    this.spouseNameInput = spouseNameInput;
    this.spouseNameLayout = spouseNameLayout;
    this.staffClassificationDropdown = staffClassificationDropdown;
    this.staffClassificationLayout = staffClassificationLayout;
    this.statusDropdown = statusDropdown;
    this.statusLayout = statusLayout;
    this.subjectsTaughtInput = subjectsTaughtInput;
    this.subjectsTaughtLayout = subjectsTaughtLayout;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditStaffBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditStaffBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_staff, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditStaffBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressInput;
      TextInputEditText addressInput = ViewBindings.findChildViewById(rootView, id);
      if (addressInput == null) {
        break missingId;
      }

      id = R.id.addressLayout;
      TextInputLayout addressLayout = ViewBindings.findChildViewById(rootView, id);
      if (addressLayout == null) {
        break missingId;
      }

      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.appointedSubjectInput;
      TextInputEditText appointedSubjectInput = ViewBindings.findChildViewById(rootView, id);
      if (appointedSubjectInput == null) {
        break missingId;
      }

      id = R.id.appointedSubjectLayout;
      TextInputLayout appointedSubjectLayout = ViewBindings.findChildViewById(rootView, id);
      if (appointedSubjectLayout == null) {
        break missingId;
      }

      id = R.id.cameraButton;
      MaterialButton cameraButton = ViewBindings.findChildViewById(rootView, id);
      if (cameraButton == null) {
        break missingId;
      }

      id = R.id.dobInput;
      TextInputEditText dobInput = ViewBindings.findChildViewById(rootView, id);
      if (dobInput == null) {
        break missingId;
      }

      id = R.id.dobLayout;
      TextInputLayout dobLayout = ViewBindings.findChildViewById(rootView, id);
      if (dobLayout == null) {
        break missingId;
      }

      id = R.id.educationalQualificationsInput;
      TextInputEditText educationalQualificationsInput = ViewBindings.findChildViewById(rootView, id);
      if (educationalQualificationsInput == null) {
        break missingId;
      }

      id = R.id.educationalQualificationsLayout;
      TextInputLayout educationalQualificationsLayout = ViewBindings.findChildViewById(rootView, id);
      if (educationalQualificationsLayout == null) {
        break missingId;
      }

      id = R.id.emailInput;
      TextInputEditText emailInput = ViewBindings.findChildViewById(rootView, id);
      if (emailInput == null) {
        break missingId;
      }

      id = R.id.emailLayout;
      TextInputLayout emailLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailLayout == null) {
        break missingId;
      }

      id = R.id.emergencyContactNameInput;
      TextInputEditText emergencyContactNameInput = ViewBindings.findChildViewById(rootView, id);
      if (emergencyContactNameInput == null) {
        break missingId;
      }

      id = R.id.emergencyContactNameLayout;
      TextInputLayout emergencyContactNameLayout = ViewBindings.findChildViewById(rootView, id);
      if (emergencyContactNameLayout == null) {
        break missingId;
      }

      id = R.id.emergencyContactPhoneInput;
      TextInputEditText emergencyContactPhoneInput = ViewBindings.findChildViewById(rootView, id);
      if (emergencyContactPhoneInput == null) {
        break missingId;
      }

      id = R.id.emergencyContactPhoneLayout;
      TextInputLayout emergencyContactPhoneLayout = ViewBindings.findChildViewById(rootView, id);
      if (emergencyContactPhoneLayout == null) {
        break missingId;
      }

      id = R.id.firstAppointmentInput;
      TextInputEditText firstAppointmentInput = ViewBindings.findChildViewById(rootView, id);
      if (firstAppointmentInput == null) {
        break missingId;
      }

      id = R.id.firstAppointmentLayout;
      TextInputLayout firstAppointmentLayout = ViewBindings.findChildViewById(rootView, id);
      if (firstAppointmentLayout == null) {
        break missingId;
      }

      id = R.id.fullNameInput;
      TextInputEditText fullNameInput = ViewBindings.findChildViewById(rootView, id);
      if (fullNameInput == null) {
        break missingId;
      }

      id = R.id.fullNameLayout;
      TextInputLayout fullNameLayout = ViewBindings.findChildViewById(rootView, id);
      if (fullNameLayout == null) {
        break missingId;
      }

      id = R.id.galleryButton;
      MaterialButton galleryButton = ViewBindings.findChildViewById(rootView, id);
      if (galleryButton == null) {
        break missingId;
      }

      id = R.id.genderDropdown;
      AutoCompleteTextView genderDropdown = ViewBindings.findChildViewById(rootView, id);
      if (genderDropdown == null) {
        break missingId;
      }

      id = R.id.genderLayout;
      TextInputLayout genderLayout = ViewBindings.findChildViewById(rootView, id);
      if (genderLayout == null) {
        break missingId;
      }

      id = R.id.gradesTaughtInput;
      TextInputEditText gradesTaughtInput = ViewBindings.findChildViewById(rootView, id);
      if (gradesTaughtInput == null) {
        break missingId;
      }

      id = R.id.gradesTaughtLayout;
      TextInputLayout gradesTaughtLayout = ViewBindings.findChildViewById(rootView, id);
      if (gradesTaughtLayout == null) {
        break missingId;
      }

      id = R.id.maritalStatusDropdown;
      AutoCompleteTextView maritalStatusDropdown = ViewBindings.findChildViewById(rootView, id);
      if (maritalStatusDropdown == null) {
        break missingId;
      }

      id = R.id.maritalStatusLayout;
      TextInputLayout maritalStatusLayout = ViewBindings.findChildViewById(rootView, id);
      if (maritalStatusLayout == null) {
        break missingId;
      }

      id = R.id.nameWithInitialsInput;
      TextInputEditText nameWithInitialsInput = ViewBindings.findChildViewById(rootView, id);
      if (nameWithInitialsInput == null) {
        break missingId;
      }

      id = R.id.nameWithInitialsLayout;
      TextInputLayout nameWithInitialsLayout = ViewBindings.findChildViewById(rootView, id);
      if (nameWithInitialsLayout == null) {
        break missingId;
      }

      id = R.id.nicInput;
      TextInputEditText nicInput = ViewBindings.findChildViewById(rootView, id);
      if (nicInput == null) {
        break missingId;
      }

      id = R.id.nicLayout;
      TextInputLayout nicLayout = ViewBindings.findChildViewById(rootView, id);
      if (nicLayout == null) {
        break missingId;
      }

      id = R.id.passwordInput;
      TextInputEditText passwordInput = ViewBindings.findChildViewById(rootView, id);
      if (passwordInput == null) {
        break missingId;
      }

      id = R.id.passwordLayout;
      TextInputLayout passwordLayout = ViewBindings.findChildViewById(rootView, id);
      if (passwordLayout == null) {
        break missingId;
      }

      id = R.id.phoneInput;
      TextInputEditText phoneInput = ViewBindings.findChildViewById(rootView, id);
      if (phoneInput == null) {
        break missingId;
      }

      id = R.id.phoneLayout;
      TextInputLayout phoneLayout = ViewBindings.findChildViewById(rootView, id);
      if (phoneLayout == null) {
        break missingId;
      }

      id = R.id.previouslyServedSchoolsInput;
      TextInputEditText previouslyServedSchoolsInput = ViewBindings.findChildViewById(rootView, id);
      if (previouslyServedSchoolsInput == null) {
        break missingId;
      }

      id = R.id.previouslyServedSchoolsLayout;
      TextInputLayout previouslyServedSchoolsLayout = ViewBindings.findChildViewById(rootView, id);
      if (previouslyServedSchoolsLayout == null) {
        break missingId;
      }

      id = R.id.professionalQualificationsInput;
      TextInputEditText professionalQualificationsInput = ViewBindings.findChildViewById(rootView, id);
      if (professionalQualificationsInput == null) {
        break missingId;
      }

      id = R.id.professionalQualificationsLayout;
      TextInputLayout professionalQualificationsLayout = ViewBindings.findChildViewById(rootView, id);
      if (professionalQualificationsLayout == null) {
        break missingId;
      }

      id = R.id.profileImageView;
      ImageView profileImageView = ViewBindings.findChildViewById(rootView, id);
      if (profileImageView == null) {
        break missingId;
      }

      id = R.id.registrationNumberInput;
      TextInputEditText registrationNumberInput = ViewBindings.findChildViewById(rootView, id);
      if (registrationNumberInput == null) {
        break missingId;
      }

      id = R.id.registrationNumberLayout;
      TextInputLayout registrationNumberLayout = ViewBindings.findChildViewById(rootView, id);
      if (registrationNumberLayout == null) {
        break missingId;
      }

      id = R.id.saveButton;
      ExtendedFloatingActionButton saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.schoolAppointmentInput;
      TextInputEditText schoolAppointmentInput = ViewBindings.findChildViewById(rootView, id);
      if (schoolAppointmentInput == null) {
        break missingId;
      }

      id = R.id.schoolAppointmentLayout;
      TextInputLayout schoolAppointmentLayout = ViewBindings.findChildViewById(rootView, id);
      if (schoolAppointmentLayout == null) {
        break missingId;
      }

      id = R.id.spouseNameInput;
      TextInputEditText spouseNameInput = ViewBindings.findChildViewById(rootView, id);
      if (spouseNameInput == null) {
        break missingId;
      }

      id = R.id.spouseNameLayout;
      TextInputLayout spouseNameLayout = ViewBindings.findChildViewById(rootView, id);
      if (spouseNameLayout == null) {
        break missingId;
      }

      id = R.id.staffClassificationDropdown;
      AutoCompleteTextView staffClassificationDropdown = ViewBindings.findChildViewById(rootView, id);
      if (staffClassificationDropdown == null) {
        break missingId;
      }

      id = R.id.staffClassificationLayout;
      TextInputLayout staffClassificationLayout = ViewBindings.findChildViewById(rootView, id);
      if (staffClassificationLayout == null) {
        break missingId;
      }

      id = R.id.statusDropdown;
      AutoCompleteTextView statusDropdown = ViewBindings.findChildViewById(rootView, id);
      if (statusDropdown == null) {
        break missingId;
      }

      id = R.id.statusLayout;
      TextInputLayout statusLayout = ViewBindings.findChildViewById(rootView, id);
      if (statusLayout == null) {
        break missingId;
      }

      id = R.id.subjectsTaughtInput;
      TextInputEditText subjectsTaughtInput = ViewBindings.findChildViewById(rootView, id);
      if (subjectsTaughtInput == null) {
        break missingId;
      }

      id = R.id.subjectsTaughtLayout;
      TextInputLayout subjectsTaughtLayout = ViewBindings.findChildViewById(rootView, id);
      if (subjectsTaughtLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityEditStaffBinding((CoordinatorLayout) rootView, addressInput, addressLayout,
          appBarLayout, appointedSubjectInput, appointedSubjectLayout, cameraButton, dobInput,
          dobLayout, educationalQualificationsInput, educationalQualificationsLayout, emailInput,
          emailLayout, emergencyContactNameInput, emergencyContactNameLayout,
          emergencyContactPhoneInput, emergencyContactPhoneLayout, firstAppointmentInput,
          firstAppointmentLayout, fullNameInput, fullNameLayout, galleryButton, genderDropdown,
          genderLayout, gradesTaughtInput, gradesTaughtLayout, maritalStatusDropdown,
          maritalStatusLayout, nameWithInitialsInput, nameWithInitialsLayout, nicInput, nicLayout,
          passwordInput, passwordLayout, phoneInput, phoneLayout, previouslyServedSchoolsInput,
          previouslyServedSchoolsLayout, professionalQualificationsInput,
          professionalQualificationsLayout, profileImageView, registrationNumberInput,
          registrationNumberLayout, saveButton, schoolAppointmentInput, schoolAppointmentLayout,
          spouseNameInput, spouseNameLayout, staffClassificationDropdown, staffClassificationLayout,
          statusDropdown, statusLayout, subjectsTaughtInput, subjectsTaughtLayout, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
