// Generated by view binder compiler. Do not edit!
package com.deltagemunupuramv.dbms.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.deltagemunupuramv.dbms.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityViewStaffBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final TextView appointedSubjectTextView;

  @NonNull
  public final MaterialButton contactButton;

  @NonNull
  public final MaterialButton editButton;

  @NonNull
  public final ExtendedFloatingActionButton editFab;

  @NonNull
  public final TextView emailTextView;

  @NonNull
  public final TextView firstAppointmentTextView;

  @NonNull
  public final TextView fullNameTextView;

  @NonNull
  public final TextView nameWithInitialsTextView;

  @NonNull
  public final TextView nicNumberTextView;

  @NonNull
  public final TextView phoneNumberTextView;

  @NonNull
  public final ImageView profileImageView;

  @NonNull
  public final TextView registrationNumberTextView;

  @NonNull
  public final TextView schoolAppointmentTextView;

  @NonNull
  public final TextView staffIdTextView;

  @NonNull
  public final TextView staffNameTextView;

  @NonNull
  public final TextView staffPositionTextView;

  @NonNull
  public final TextView staffTypeTextView;

  @NonNull
  public final TextView statusTextView;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityViewStaffBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull TextView appointedSubjectTextView,
      @NonNull MaterialButton contactButton, @NonNull MaterialButton editButton,
      @NonNull ExtendedFloatingActionButton editFab, @NonNull TextView emailTextView,
      @NonNull TextView firstAppointmentTextView, @NonNull TextView fullNameTextView,
      @NonNull TextView nameWithInitialsTextView, @NonNull TextView nicNumberTextView,
      @NonNull TextView phoneNumberTextView, @NonNull ImageView profileImageView,
      @NonNull TextView registrationNumberTextView, @NonNull TextView schoolAppointmentTextView,
      @NonNull TextView staffIdTextView, @NonNull TextView staffNameTextView,
      @NonNull TextView staffPositionTextView, @NonNull TextView staffTypeTextView,
      @NonNull TextView statusTextView, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.appointedSubjectTextView = appointedSubjectTextView;
    this.contactButton = contactButton;
    this.editButton = editButton;
    this.editFab = editFab;
    this.emailTextView = emailTextView;
    this.firstAppointmentTextView = firstAppointmentTextView;
    this.fullNameTextView = fullNameTextView;
    this.nameWithInitialsTextView = nameWithInitialsTextView;
    this.nicNumberTextView = nicNumberTextView;
    this.phoneNumberTextView = phoneNumberTextView;
    this.profileImageView = profileImageView;
    this.registrationNumberTextView = registrationNumberTextView;
    this.schoolAppointmentTextView = schoolAppointmentTextView;
    this.staffIdTextView = staffIdTextView;
    this.staffNameTextView = staffNameTextView;
    this.staffPositionTextView = staffPositionTextView;
    this.staffTypeTextView = staffTypeTextView;
    this.statusTextView = statusTextView;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityViewStaffBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityViewStaffBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_view_staff, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityViewStaffBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.appointedSubjectTextView;
      TextView appointedSubjectTextView = ViewBindings.findChildViewById(rootView, id);
      if (appointedSubjectTextView == null) {
        break missingId;
      }

      id = R.id.contactButton;
      MaterialButton contactButton = ViewBindings.findChildViewById(rootView, id);
      if (contactButton == null) {
        break missingId;
      }

      id = R.id.editButton;
      MaterialButton editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.editFab;
      ExtendedFloatingActionButton editFab = ViewBindings.findChildViewById(rootView, id);
      if (editFab == null) {
        break missingId;
      }

      id = R.id.emailTextView;
      TextView emailTextView = ViewBindings.findChildViewById(rootView, id);
      if (emailTextView == null) {
        break missingId;
      }

      id = R.id.firstAppointmentTextView;
      TextView firstAppointmentTextView = ViewBindings.findChildViewById(rootView, id);
      if (firstAppointmentTextView == null) {
        break missingId;
      }

      id = R.id.fullNameTextView;
      TextView fullNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (fullNameTextView == null) {
        break missingId;
      }

      id = R.id.nameWithInitialsTextView;
      TextView nameWithInitialsTextView = ViewBindings.findChildViewById(rootView, id);
      if (nameWithInitialsTextView == null) {
        break missingId;
      }

      id = R.id.nicNumberTextView;
      TextView nicNumberTextView = ViewBindings.findChildViewById(rootView, id);
      if (nicNumberTextView == null) {
        break missingId;
      }

      id = R.id.phoneNumberTextView;
      TextView phoneNumberTextView = ViewBindings.findChildViewById(rootView, id);
      if (phoneNumberTextView == null) {
        break missingId;
      }

      id = R.id.profileImageView;
      ImageView profileImageView = ViewBindings.findChildViewById(rootView, id);
      if (profileImageView == null) {
        break missingId;
      }

      id = R.id.registrationNumberTextView;
      TextView registrationNumberTextView = ViewBindings.findChildViewById(rootView, id);
      if (registrationNumberTextView == null) {
        break missingId;
      }

      id = R.id.schoolAppointmentTextView;
      TextView schoolAppointmentTextView = ViewBindings.findChildViewById(rootView, id);
      if (schoolAppointmentTextView == null) {
        break missingId;
      }

      id = R.id.staffIdTextView;
      TextView staffIdTextView = ViewBindings.findChildViewById(rootView, id);
      if (staffIdTextView == null) {
        break missingId;
      }

      id = R.id.staffNameTextView;
      TextView staffNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (staffNameTextView == null) {
        break missingId;
      }

      id = R.id.staffPositionTextView;
      TextView staffPositionTextView = ViewBindings.findChildViewById(rootView, id);
      if (staffPositionTextView == null) {
        break missingId;
      }

      id = R.id.staffTypeTextView;
      TextView staffTypeTextView = ViewBindings.findChildViewById(rootView, id);
      if (staffTypeTextView == null) {
        break missingId;
      }

      id = R.id.statusTextView;
      TextView statusTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusTextView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityViewStaffBinding((CoordinatorLayout) rootView, appBarLayout,
          appointedSubjectTextView, contactButton, editButton, editFab, emailTextView,
          firstAppointmentTextView, fullNameTextView, nameWithInitialsTextView, nicNumberTextView,
          phoneNumberTextView, profileImageView, registrationNumberTextView,
          schoolAppointmentTextView, staffIdTextView, staffNameTextView, staffPositionTextView,
          staffTypeTextView, statusTextView, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
